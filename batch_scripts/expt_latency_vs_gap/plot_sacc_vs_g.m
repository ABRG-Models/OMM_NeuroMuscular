% Load the data generated by sacc_lat_vs_gap.sh runs
r = struct();
rr = [];

colours = {'r','b','g','k','c','m','r--','b--','g--','k--','c--','m--'};

flist = glob('results/r*.dat');
llen = size(flist)(1);
for i = [1 : llen]

    rnm = flist{i}
    resdatname = substr(rnm, 9); % strips initial 'results/' string
    resdatname = substr(resdatname, 1, size(resdatname)(2)-4); % Strips '.dat' off
    resdatname = strrep (resdatname, '.', 'p');
    resdatname = strrep (resdatname, '-', 'm');

    load (rnm); % loads struct variable called result
    r = struct_merge (r, result);

    size(rr);
    sz_2 = size(result.(resdatname))(2);

    if (sz_2 == 14)
        rr = [rr; result.(resdatname)];
    end

end

% The rr array contains these columns:
% thetaX, thetaY, fix_lum, gap_ms, lumval, eyeRxAvg, eyeRyAvg, eyeRzAvg, eyeRxSD, eyeRySD, eyeRzSD, latmean, latsd, dopamine
%
% sort rr on gap_ms
rr = sortrows(rr,4);

% Sort also by luminance (col 4) and separate out into lat vs. gap
% for differing luminances.
luminances = unique(rr(:,5));

% lat vs gap
figure(32);
clf;
legend_str='';
colcount = 1;
for l = luminances'
    l
    rr_1 = [];
    rr_1 = rr(find(rr(:,5)==l),:);
    errorbar (rr_1(:,4),rr_1(:,12),rr_1(:,13), colours{colcount})
    hold on;
    legend_str = [legend_str; 'L: ' num2str(l) ' DA: ' num2str(rr_1(1,14))];
    colcount = colcount + 1;
end
xlabel('gap (ms)');
ylabel('Latency (ms)');
title(['X/Y ' num2str(rr(1,1)) '/' num2str(rr(1,2)) ]);
legend(legend_str);